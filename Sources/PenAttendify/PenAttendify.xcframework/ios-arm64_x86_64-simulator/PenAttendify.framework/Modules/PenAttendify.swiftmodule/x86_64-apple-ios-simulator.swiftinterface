// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name PenAttendify
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import CoreBluetooth
import CoreData
import CoreLocation
import Foundation
@_exported import PenAttendify
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public class PenAttendifyConfiguration {
  public init(baseUrl: Swift.String, serviceName: Swift.String, clientName: Swift.String, clientKey: Swift.String, userId: Swift.String, companyId: Swift.String, syncEnabled: Swift.Bool)
  @objc deinit
}
public class PenAttendifyConfigurationBuilder {
  public init()
  public func setBaseUrl(_ baseUrl: Swift.String) -> Self
  public func setServiceName(_ serviceName: Swift.String) -> Self
  public func setClientName(_ clientName: Swift.String) -> Self
  public func setClientKey(_ clientKey: Swift.String) -> Self
  public func setUserId(_ userId: Swift.String) -> Self
  public func setCompanyId(_ companyId: Swift.String) -> Self
  public func syncEnabled(_ syncEnabled: Swift.Bool) -> Self
  public func build() -> PenAttendify.PenAttendifyConfiguration
  @objc deinit
}
public protocol PenAttendifyDelegate : AnyObject {
  func didFinishInitializing()
  func didStartScanning()
  func didFinishScanning(results: [(zoneId: Swift.Int, zoneTitle: Swift.String?, zoneRatio: Swift.Double)])
  func didFailWithError(error: PenAttendify.PenAttendifyError)
}
@_hasMissingDesignatedInitializers public class PIAttendify {
  weak public static var delegate: (any PenAttendify.PenAttendifyDelegate)?
  public static func initialize(with configuration: PenAttendify.PenAttendifyConfiguration)
  public static func startScan()
  public static func stopScan()
  public static func clearData()
  public static func deinitialize()
  public static func isInitialized() -> Swift.Bool
  @objc deinit
}
public enum PenAttendifyError : Swift.Error {
  case locationPermissionUnauthorized
  case bluetoothTurnedOff
  case serviceNotInitialized
  case serverError
  case unauthorized
  case clientError
  case networkError(apiName: Swift.String)
  case hostError(apiName: Swift.String)
  case httpError(apiName: Swift.String)
  case timeoutError(apiName: Swift.String)
  case responseBodyEmpty(apiName: Swift.String, message: Swift.String)
  case unknownError(apiName: Swift.String, message: Swift.String)
}
extension PenAttendify.PenAttendifyError : Foundation.LocalizedError {
  public var errorDescription: Swift.String? {
    get
  }
}
@_inheritsConvenienceInitializers @objc(BeaconData) public class BeaconData : CoreData.NSManagedObject {
  @objc override dynamic public init(entity: CoreData.NSEntityDescription, insertInto context: CoreData.NSManagedObjectContext?)
  @objc deinit
}
extension PenAttendify.BeaconData {
  @nonobjc public class func fetchRequest() -> CoreData.NSFetchRequest<PenAttendify.BeaconData>
  @objc @NSManaged dynamic public var id: Swift.Int64 {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var major: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var minor: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var rssi: Swift.Int64 {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var uuid: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var zoneId: Swift.Int64 {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var zoneName: Swift.String? {
    @objc get
    @objc set
  }
}
extension PenAttendify.BeaconData : Swift.Identifiable {
  public typealias ID = Swift.Int64
}
@_inheritsConvenienceInitializers @objc(BeaconRegionData) public class BeaconRegionData : CoreData.NSManagedObject {
  @objc override dynamic public init(entity: CoreData.NSEntityDescription, insertInto context: CoreData.NSManagedObjectContext?)
  @objc deinit
}
extension PenAttendify.BeaconRegionData {
  @nonobjc public class func fetchRequest() -> CoreData.NSFetchRequest<PenAttendify.BeaconRegionData>
  @objc @NSManaged dynamic public var uuid: Swift.String? {
    @objc get
    @objc set
  }
}
extension PenAttendify.BeaconRegionData : Swift.Identifiable {
  public typealias ID = Swift.ObjectIdentifier
}
@_inheritsConvenienceInitializers @objc(SettingData) public class SettingData : CoreData.NSManagedObject {
  @objc override dynamic public init(entity: CoreData.NSEntityDescription, insertInto context: CoreData.NSManagedObjectContext?)
  @objc deinit
}
extension PenAttendify.SettingData {
  @nonobjc public class func fetchRequest() -> CoreData.NSFetchRequest<PenAttendify.SettingData>
  @objc @NSManaged dynamic public var key: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var value: Swift.String? {
    @objc get
    @objc set
  }
}
extension PenAttendify.SettingData : Swift.Identifiable {
  public typealias ID = Swift.ObjectIdentifier
}
@_inheritsConvenienceInitializers @objc(TokenData) public class TokenData : CoreData.NSManagedObject {
  @objc override dynamic public init(entity: CoreData.NSEntityDescription, insertInto context: CoreData.NSManagedObjectContext?)
  @objc deinit
}
extension PenAttendify.TokenData {
  @nonobjc public class func fetchRequest() -> CoreData.NSFetchRequest<PenAttendify.TokenData>
  @objc @NSManaged dynamic public var token: Swift.String? {
    @objc get
    @objc set
  }
}
extension PenAttendify.TokenData : Swift.Identifiable {
  public typealias ID = Swift.ObjectIdentifier
}
